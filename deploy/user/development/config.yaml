total_shutdown_timeout:
  15s

http_server:
  port: 5001
  cors:
    allow_origins: "*"
  shutdown_context_timeout: "10s"

repository:
  cache_prefix: user
  cache_enabled: true

cache_config:
  ttl: "24h"
  write_ttl: "10s"

postgres_db:
  host: user-db
  port: 5432
  user: "user_admin"
  password: "password123"
  db_name: user_db
  ssl_mode: disable
  max_idle_conns: 15
  max_open_conns: 100
  conn_max_lifetime: 5
  path_of_migration: './userapp/repository/migrations'

redis:
  host: user-redis
  Port: 6379

logger:
  file_path: "logs/user/service.log"
  use_local_time: true
  file_max_size_in_mb: 10
  file_max_age_in_days: 7

guard:
  sign_key: "roham"
  access_expiration_time: 30m
  refresh_expiration_time: 50m
  access_subject: "at_user"
  refresh_subject: "rf_user"
  opa_policy:
    package: "httpapi.authz"
    rule: "allow"
    policy: |
      package httpapi.authz

      default allow = false

      # Define role constants
      role_admin := 1

      # Admin can access everything
      allow if {
          input.user.role == role_admin
      }

      # Regular users can access if the request has query parameter "request=GetMap"
      allow if {
          input.request.query.request == "GetMap"
      }

    is_path: false